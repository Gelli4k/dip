version: '3.9'
services:
  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
  migrations:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate"
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    command: >
      sh -c "python manage.py runbot"
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  db:
    env_file:
      - .env
    image: postgres:14
    container_name: db-1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    healthcheck:
      #test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  data:
    external: true
    name: ./docker/postgres



